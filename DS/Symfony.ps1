# Variables
$projectName = "R209"
$dbName = "R209DN"
$dbUser = "root"
$dbPass = ""   # mets ton mot de passe ici si tu en as un
$dbHost = "127.0.0.1"
$dbPort = "3306"

# Construire l'URL DB
if ($dbPass -eq "") {
    $dbUrl = "mysql://${dbUser}@${dbHost}:${dbPort}/${dbName}"
} else {
    $dbUrl = "mysql://${dbUser}:${dbPass}@${dbHost}:${dbPort}/${dbName}"
}

# 1. Cr√©ation projet Symfony webapp
Write-Host "`n[√âtape 1] Cr√©ation du projet Symfony webapp $projectName..."
symfony new $projectName --webapp
Set-Location $projectName

# 2. Modifier le fichier .env pour la base de donn√©es
Write-Host "`n[√âtape 2] Configuration de la base de donn√©es dans .env..."
(Get-Content .env) -replace '^DATABASE_URL=.*', "DATABASE_URL=`"$dbUrl`"" | Set-Content .env
Write-Host "DATABASE_URL configur√© dans .env : $dbUrl"

# 3. Cr√©ation de la base de donn√©es
Write-Host "`n[√âtape 3] Cr√©ation de la base de donn√©es $dbName..."
symfony console doctrine:database:create

# 4. Cr√©ation de l'entit√© User (r√©ponses √† entrer dans le terminal)
Write-Host "`n[√âtape 4] Cr√©ation de l'entit√© User..."
Write-Host "‚ö†Ô∏è  Dans la console, r√©ponds comme suit aux questions :"
Write-Host "  - Nom de la classe : User"
Write-Host "  - Veux-tu stocker les utilisateurs en base ? (yes) : oui"
Write-Host "  - Quelle propri√©t√© est utilis√©e comme identifiant ? (email) : email"
Write-Host "  - L'utilisateur doit-il avoir un mot de passe ? (yes) : oui"
Write-Host "  - Veux-tu un champ 'username' ? (yes/no) : non"
Write-Host "Appuie sur Entr√©e pour continuer et r√©pondre aux questions dans la console..."
symfony console make:user

# 5. Cr√©ation migration initiale
Write-Host "`n[√âtape 5] Cr√©ation de la migration initiale..."
symfony console make:migration

# 6. Ex√©cution de la migration initiale
Write-Host "`n[√âtape 6] Ex√©cution de la migration initiale (valide avec 'yes')..."
symfony console doctrine:migrations:migrate

# 7. Cr√©ation de l'authentification (login form)
Write-Host "`n[√âtape 7] Cr√©ation de l'authentification..."
Write-Host "‚ö†Ô∏è  Dans la console, choisis :"
Write-Host "  - Style d'authentification : 1 (login form authenticator)"
Write-Host "  - Nom de la classe authenticator : laisse par d√©faut (AppCustomAuthenticator) ou choisis un nom"
Write-Host "  - Nom du contr√¥leur : laisse par d√©faut (SecurityController) ou choisis un nom"
Write-Host "Appuie sur Entr√©e et r√©ponds aux questions dans la console..."
symfony console make:security

# 8. Cr√©ation du contr√¥leur DashboardController
Write-Host "`n[√âtape 8] Cr√©ation du contr√¥leur DashboardController..."
symfony console make:controller DashboardController

# 9. Cr√©ation du formulaire d'inscription utilisateur
Write-Host "`n[√âtape 9] Cr√©ation du formulaire d'enregistrement utilisateur..."
Write-Host "‚ö†Ô∏è  Dans la console, s√©lectionne la classe User quand demand√©."
Write-Host "  - Nom associ√© √† l‚Äôemail : Hugo (ou autre)"
Write-Host "  - Authentifier apr√®s inscription ? yes"
Write-Host "  - Route de redirection apr√®s inscription ? tape : app_dashboard"
Write-Host "  - Tests PHPUnit ? no"
Write-Host "Appuie sur Entr√©e et r√©ponds aux questions dans la console..."
symfony console make:registration-form

# 10. Installer le bundle de v√©rification email n√©cessaire
Write-Host "`n[√âtape 10] Installation du bundle symfonycasts/verify-email-bundle..."
composer require symfonycasts/verify-email-bundle

# 11. G√©n√©rer et ex√©cuter la migration pour le champ isVerified ajout√© par le formulaire d'inscription
Write-Host "`n[√âtape 11] G√©n√©ration et ex√©cution de la migration pour le champ isVerified..."
symfony console make:migration
symfony console doctrine:migrations:migrate

# ... Toutes les √©tapes pr√©c√©dentes inchang√©es (1 √† 11)

# 12. Cr√©ation des entit√©s m√©tier avec instructions d√©taill√©es
# Cr√©ation de l'entit√© Note (sans relation)
Write-Host "`nCr√©ation de l'entit√© Note (sans relation)"
Write-Host "üëâ R√©ponds :"
Write-Host "  - titre : string (255)"
Write-Host "  - description : text"
Write-Host "  - createdAt : datetime_immutable"
Write-Host "  - endAt : datetime_immutable"
Write-Host "  - priorite : integer"
Read-Host "Appuie sur Entr√©e pour commencer Note"
symfony console make:entity Note

# Cr√©ation de l'entit√© Tag (sans relation)
Write-Host "`nCr√©ation de l'entit√© Tag (sans relation)"
Write-Host "üëâ R√©ponds :"
Write-Host "  - nom : string (255)"
Read-Host "Appuie sur Entr√©e pour commencer Tag"
symfony console make:entity Tag

# Cr√©ation de l'entit√© Etat (sans relation)
Write-Host "`nCr√©ation de l'entit√© Etat (sans relation)"
Write-Host "üëâ R√©ponds :"
Write-Host "  - nom : string (255)"
Write-Host "  - couleur : string (255)"
Read-Host "Appuie sur Entr√©e pour commencer Etat"
symfony console make:entity Etat

# Cr√©ation de l'entit√© VieNote (sans relation)
Write-Host "`nCr√©ation de l'entit√© VieNote (sans relation)"
Write-Host "üëâ R√©ponds :"
Write-Host "  - updatedAt : datetime"
Read-Host "Appuie sur Entr√©e pour commencer VieNote"
symfony console make:entity VieNote

# Ajouter relations √† Note
Write-Host "`nAjout des relations √† Note"
Write-Host "üëâ R√©ponds :"
Write-Host "  - Nom du champ : user"
Write-Host "  - Type : relation"
Write-Host "  - Relation : ManyToOne"
Write-Host "  - Cible : User"
Write-Host "  - InversedBy : notes"
Write-Host "  - Facultatif : non"
Write-Host "---"
Write-Host "  - etat : ManyToOne vers Etat (inversedBy: notes)"
Write-Host "---"
Write-Host "  - tags : ManyToMany vers Tag (inversedBy: notes)"
Read-Host "Appuie sur Entr√©e pour modifier Note"
symfony console make:entity Note

# Ajouter relation √† Tag (ManyToMany vers Note)
Write-Host "`nAjout des relations √† Tag"
Write-Host "üëâ R√©ponds :"
Write-Host "  - notes : ManyToMany vers Note"
Write-Host "  - InversedBy : tags"
Read-Host "Appuie sur Entr√©e pour modifier Tag"
symfony console make:entity Tag

# Ajouter relation √† Etat (OneToMany vers Note)
Write-Host "`nAjout de la relation √† Etat"
Write-Host "üëâ R√©ponds :"
Write-Host "  - notes : OneToMany vers Note"
Write-Host "  - MappedBy : etat"
Read-Host "Appuie sur Entr√©e pour modifier Etat"
symfony console make:entity Etat

# Ajouter relation √† VieNote (ManyToOne vers User)
Write-Host "`nAjout de la relation √† VieNote"
Write-Host "üëâ R√©ponds :"
Write-Host "  - user : ManyToOne vers User"
Write-Host "  - InversedBy : vieNotes"
Read-Host "Appuie sur Entr√©e pour modifier VieNote"
symfony console make:entity VieNote

# Ajouter les relations invers√©es dans User
Write-Host "`nAjout des relations √† User"
Write-Host "üëâ R√©ponds :"
Write-Host "  - notes : OneToMany vers Note (mappedBy: user)"
Write-Host "  - vieNotes : OneToMany vers VieNote (mappedBy: user)"
Read-Host "Appuie sur Entr√©e pour modifier User"
symfony console make:entity User


# 13. G√©n√©ration et ex√©cution de la migration finale
Write-Host "`n[√âtape 13] G√©n√©ration et ex√©cution de la migration finale..."
symfony console make:migration
symfony console doctrine:migrations:migrate


# 14. G√©n√©ration des CRUD pour chaque entit√©
Write-Host "`n[√âtape 14] G√©n√©ration automatique des interfaces CRUD pour chaque entit√©..."

# CRUD pour Note
Write-Host "`n‚û°Ô∏è G√©n√©ration du CRUD pour l'entit√© Note..."
symfony console make:crud Note

# CRUD pour Tag
Write-Host "`n‚û°Ô∏è G√©n√©ration du CRUD pour l'entit√© Tag..."
symfony console make:crud Tag

# CRUD pour Etat
Write-Host "`n‚û°Ô∏è G√©n√©ration du CRUD pour l'entit√© Etat..."
symfony console make:crud Etat

# CRUD pour VieNote
Write-Host "`n‚û°Ô∏è G√©n√©ration du CRUD pour l'entit√© VieNote..."
symfony console make:crud VieNote



Write-Host "`n‚úÖ Projet Symfony pr√™t !"
Write-Host "‚û°Ô∏è Lance le serveur : symfony server:start -d"
Write-Host "‚û°Ô∏è Puis va sur : http://localhost:8000"
Write-Host "Teste : /register et /dashboard"

