<?php

namespace ContainerOytwzqQ;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSecurity_AccessMapService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'security.access_map' shared service.
     *
     * @return \Symfony\Component\Security\Http\AccessMap
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-http'.\DIRECTORY_SEPARATOR.'AccessMapInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-http'.\DIRECTORY_SEPARATOR.'AccessMap.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-foundation'.\DIRECTORY_SEPARATOR.'RequestMatcherInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-foundation'.\DIRECTORY_SEPARATOR.'ChainRequestMatcher.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-foundation'.\DIRECTORY_SEPARATOR.'RequestMatcher'.\DIRECTORY_SEPARATOR.'PathRequestMatcher.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-foundation'.\DIRECTORY_SEPARATOR.'RequestMatcher'.\DIRECTORY_SEPARATOR.'MethodRequestMatcher.php';

        $container->privates['security.access_map'] = $instance = new \Symfony\Component\Security\Http\AccessMap();

        $a = new \Symfony\Component\HttpFoundation\RequestMatcher\MethodRequestMatcher(['POST']);
        $b = new \Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher('^/etat/\\d+$');
        $c = new \Symfony\Component\HttpFoundation\RequestMatcher\MethodRequestMatcher(['GET']);
        $d = new \Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher('^/note/\\d+$');
        $e = new \Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher('^/tag/\\d+$');
        $f = new \Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher('^/vie/note/\\d+$');
        $g = new \Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher('^/user/\\d+$');

        $instance->add(new \Symfony\Component\HttpFoundation\ChainRequestMatcher([new \Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher('^/dashboard')]), ['ROLE_USER', 'ROLE_ADMIN', 'ROLE_ROOT'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\ChainRequestMatcher([new \Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher('^/dashboard/note')]), ['ROLE_USER', 'ROLE_ADMIN', 'ROLE_ROOT'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\ChainRequestMatcher([new \Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher('^/etat/new')]), ['ROLE_ADMIN', 'ROLE_ROOT'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\ChainRequestMatcher([new \Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher('^/etat/\\d+/edit')]), ['ROLE_ADMIN', 'ROLE_ROOT'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\ChainRequestMatcher([$a, $b]), ['ROLE_ADMIN', 'ROLE_ROOT'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\ChainRequestMatcher([$c, $b]), ['ROLE_USER', 'ROLE_ADMIN', 'ROLE_ROOT'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\ChainRequestMatcher([$c, new \Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher('^/etat$')]), ['ROLE_USER', 'ROLE_ADMIN', 'ROLE_ROOT'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\ChainRequestMatcher([new \Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher('^/note/new')]), ['ROLE_ADMIN'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\ChainRequestMatcher([new \Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher('^/note/\\d+/edit')]), ['ROLE_ADMIN', 'ROLE_ROOT'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\ChainRequestMatcher([$a, $d]), ['ROLE_ADMIN', 'ROLE_ROOT'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\ChainRequestMatcher([$c, $d]), ['ROLE_USER', 'ROLE_ADMIN', 'ROLE_ROOT'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\ChainRequestMatcher([$c, new \Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher('^/note$')]), ['ROLE_USER', 'ROLE_ADMIN', 'ROLE_ROOT'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\ChainRequestMatcher([new \Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher('^/tag/new')]), ['ROLE_ADMIN', 'ROLE_ROOT'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\ChainRequestMatcher([new \Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher('^/tag/\\d+/edit')]), ['ROLE_ADMIN', 'ROLE_ROOT'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\ChainRequestMatcher([$a, $e]), ['ROLE_ADMIN', 'ROLE_ROOT'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\ChainRequestMatcher([$c, $e]), ['ROLE_USER', 'ROLE_ADMIN', 'ROLE_ROOT'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\ChainRequestMatcher([$c, new \Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher('^/tag$')]), ['ROLE_USER', 'ROLE_ADMIN', 'ROLE_ROOT'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\ChainRequestMatcher([new \Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher('^/vie/note/new')]), ['ROLE_ADMIN', 'ROLE_ROOT'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\ChainRequestMatcher([new \Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher('^/vie/note/\\d+/edit')]), ['ROLE_ADMIN', 'ROLE_ROOT'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\ChainRequestMatcher([$a, $f]), ['ROLE_ADMIN', 'ROLE_ROOT'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\ChainRequestMatcher([$c, $f]), ['ROLE_USER', 'ROLE_ADMIN', 'ROLE_ROOT'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\ChainRequestMatcher([$c, new \Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher('^/vie/note$')]), ['ROLE_USER', 'ROLE_ADMIN', 'ROLE_ROOT'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\ChainRequestMatcher([new \Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher('^/user/new')]), ['ROLE_ROOT'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\ChainRequestMatcher([new \Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher('^/user/\\d+/edit')]), ['ROLE_ROOT'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\ChainRequestMatcher([$a, $g]), ['ROLE_ROOT'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\ChainRequestMatcher([$c, $g]), ['ROLE_ADMIN', 'ROLE_ROOT'], NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\ChainRequestMatcher([$c, new \Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher('^/user$')]), ['ROLE_ADMIN', 'ROLE_ROOT'], NULL);

        return $instance;
    }
}
